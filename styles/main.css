/* my css */

*{
    box-sizing: border-box;
}

img{
  display: block;
  width: 100%;
}

figure{
  margin:0;
}

main {
    margin: 0 auto;
    padding: 0 1rem;
    max-width: 80rem;
  }

body{
    display: flex;
    flex-direction: column;
    font-family: 'Comfortaa', cursive;
    line-height: 2rem;
    color: gray;

}

body.form{
  background-color: burlywood;
}

header{
position: relative;

}

header .content{
  display: flex;
  align-items: center;
  justify-content: center;
  position:absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.3);
}


h1,
h2,
h3, 
h4{
    font-family: 'Montserrat', sans-serif;
    color: #C44536;
    line-height: 1.2rem;
}


:root{
    --button-color: #283D3B;
  }
  
  *{
    box-sizing: border-box;
  }
  

  a{
    text-decoration: none;
    color: #6d214f
  }
  
  p{
    margin-bottom: 2rem;
  }
  
  
  .button{
    cursor: pointer;
    color: var(--button-color);
    border: 2px solid var(--button-color);
    padding: .5rem;
    border-radius: 7px;
    margin-right: 1rem;

    transition: background-color 600ms, color 600ms;
  }
  
  .button:hover{
    color: #fff;
    background-color:var(--button-color);
  }

header{
  margin-bottom: 1.5rem;
}

.about header,
.form header{
  margin-top: 130px;
  margin-bottom:0;
}


header h1{
  font-weight: 900;
  font-size: 3rem;
  text-shadow: 2px 2px 2px rgba(0, 0, 0, 0.6);
  line-height: 1.2;
}

header p{
  color: black;
  font-size: 1.4rem;

}

.panel{
  display: flex;
  flex-direction: column;
  gap: 2rem;
  margin-bottom: 6rem;

}

.panel h2{
  margin:0;
}

.panel .image-wrapper{
  order:-1;
}



.cards{
  display: flex;
  flex-direction: column;
  gap: 1rem;
  padding: 0 0 0.6

}

.cards a{
  display:block;
}

.cards .card{
  position: relative;
}

.cards .content{
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom:0;
  background-color: rgba(0, 0, 0, 0.3);

  display: flex;
  align-items: center;
  justify-content: center;


  transition: background-color 300ms ease;
}

.cards .content:hover{
  background-color: transparent;
}

.cards p{
  font-size: 1.7rem;
  color: azure;
}

.loader {
  border-radius: 50%;
  width: 8rem;
  height: 8rem;
  border: 16px solid #283D3B66;
  border-left: 16px solid #283D3B;
  animation: load 1000ms infinite linear;
}

.menu-icon{
  position: fixed;
  top: 32px;
  left:32px;
  background-color:#C44536;
  width: 80px;
  height: 80px;
  border-radius: 50%;
  padding: 1rem;
  z-index:1;
}

.menu-icon line {
  stroke: #fff;
  stroke-width: 3px;
  stroke-linecap: round;
  transform-origin: center;
  transition: transform 300ms ease;
}

.menu-icon line:first-child {
  transform: translateY(16%);
}

.menu-icon line:last-child {
  transform: translateY(-16%);
}

.main-nav nav{
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color:#fff ;

  display: flex;
  align-items: center;
  justify-content: center;
  transform: translateX(-110vw);
  transition: transform 300ms;
}

.main-nav ul{
  display:flex;
  margin: 2rem 0;
  flex-direction: column;
  gap:1.5rem;

}

.main-nav.close nav{
  transform: translateX(0);

}


.main-nav ul{
list-style-type: none;

}


/* JavaScript toggles a "close" class on the <nav> when the menu-icon is clicked */
/* .close nav {
  display: block;
} */

.close line:first-child {
  transform: rotate(135deg);
}

.close line:last-child {
  transform: rotate(-135deg);
}

.form section{
  display:flex;
  flex-direction: column;
  gap:3rem;
}

.form .svg-wrapper{
  align-self: center;
  min-width: 100px;
  max-width: 260px;
}

form {
  display: grid;
  grid-template-columns: 1fr;
  font-size: 1.4rem;
  line-height: 1.5;
  background-color: burlywood;
  padding-right: 1rem;
  padding-left: 1rem;
}

fieldset {
  border: none;
  display: grid;
  grid-template-columns: min-content 1fr;
  gap: 1rem;
  align-items: center;

}

/* legend is not considered a child of fieldset and may not render in the grid */
legend {
  line-height: 1.2;
  grid-column: span 2;
  margin-bottom: 0.6rem;
}

input:not([type="radio"]):not([type="checkbox"]),
fieldset,
textarea {
  margin-bottom: 1.5rem;
}

input:not([type="radio"]):not([type="checkbox"]),
textarea {
  background-color: #fff;
  padding: 0.4rem;
}

button {
  justify-self: center;
  padding: 0.5rem 1rem;
  font-size: 1.2rem;
  background-color: var(--form-bg-color);
  color: var(--form-font-color);
  border: 2px solid var(--form-font-color);
  border-radius: 6px;
  margin-bottom: 3rem;
  transition: background-color 300ms;
}

input[type="checkbox"],
input[type="radio"]{
  appearance: none;
  -webkit-appearance: none;
  height: 34px;
  width: 34px;
  border:1px solid #283D3B;
  display:grid;
  align-items: center;
  justify-content: center;

}

input[type="radio"]{
  border-radius: 50%;
}

input[type="checkbox"]::after,
input[type="radio"]::after{
  content:"";
  display:block;
}

input[type="checkbox"]::after{
  width:10px;
  height:18px;
  border-right: 2px solid #283D3B;
  border-bottom: 2px solid #283D3B;
  transform: rotate(38deg);

  opacity: 0;
}

input[type="checkbox"]:checked::after{
  opacity: 1;
}

input[type="radio"]::after{
  height: 24px;
  width: 24px;
  background-color:#283D3B;
  border-radius: 50%;
  transform: scale(0);
  transition: transform 200ms;

}

input[type="radio"]:checked::after{
  transform: scale(1);
}

input[type="checkbox"]:hover,
input[type="radio"]:hover,
input[type="checkbox"]:focus,
input[type="radio"]:focus{
  box-shadow: 0 0 6px steelblue;
}


button:hover,
button:focus {
  color: var(--form-bg-color);
  background-color: var(--form-bg-color-light);
}

/* checkboxes and radios will have their own hover and focus states in next example. you don't need to add the :not() if you place your button hover and focus states below this */
input:not([type="radio"]):not([type="checkbox"]):hover,
input:not([type="radio"]):not([type="checkbox"]):focus,
textarea:hover,
textarea:focus {
  outline: 1px solid blue;
  background-color: var(--form-bg-color-light);

  
}



@keyframes load {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}


@media(min-width: 500px){

  .form section{
    flex-direction: row;

  } 


  .menu-icon{
    display:none;
  }

  .main-nav nav{
    position: static;
    background-color: transparent;
    transform: translateX(0);
  }

  .main-nav ul{
  flex-direction: row;
  }

  header{
    margin-bottom: 0;
  }
  
  .about header,
  .form header{
    margin-top: 0px;
  }

  .panel{
    flex-direction: row;
  }
  
  .panel .image-wrapper{
    order: 0;
    flex: 1 1 40%;
  }

  .panel .left{
    order:-1;
  }

  .panel .text-wrapper{
    flex: 1 1 60%;
  }


  .cards{
    flex-direction: row;
    flex-wrap: wrap;
  }


  .card{
    flex: 1 1 40%
  }

  .card .content{
    font-size: 2rem;
    line-height: 3rem;
  }

  .cards p{
    font-size: 2.5rem;
    color: azure;
  }

  form {
    grid-template-columns: max-content 1fr;
    grid-column-gap: 1rem;
  }

  form > label {
    justify-self: end;
  }

  label[for="instructions"] {
    justify-self: start;
  }

  fieldset,
  label[for="instructions"],
  textarea,
  button {
    grid-column: 2;
  }

  button {
    justify-self: start;
  }

}


@media (min-width: 800px){
  .cards{
    flex-wrap: nowrap;
  }

  .cards p{
    font-size: 1.5rem;
  }
}
